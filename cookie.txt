1. When using fetch or axios

By default, fetch does not send cookies across domains.

To include cookies/session info, you need to explicitly set credentials:

fetch("https://example.com/data", {
  method: "GET",
  credentials: "include" // ðŸ‘ˆ ensures cookies (and HTTP auth headers) are sent
});

With axios, this is done with:

axios.get("https://example.com/data", { withCredentials: true });

The reason: AJAX/XHR requests are more flexible and can be cross-origin, 
so browsers make them stricter by default to avoid leaking cookies to 
other origins unless you explicitly allow it.

2. When submitting forms (<form action="..." method="POST">) or following links (<a href="...">)

These are standard browser navigation requests.

By default, the browser automatically includes cookies for the target domain (same-origin, 
or cross-origin if allowed by cookie policy).

You donâ€™t need to specify anything extra â€” cookies are handled by the browser as part of the HTTP request.

The difference

Form submissions and navigation (href) = normal HTTP requests, browser handles cookies automatically.

AJAX (fetch, axios) = script-driven requests, so browser requires explicit opt-in 
(credentials: "include" or withCredentials: true) to protect against CSRF/cross-site leaks.