Data Querying (SELECT):

SELECT * FROM employees;
SELECT name, salary FROM employees WHERE department = 'HR';
SELECT COUNT(*) FROM orders WHERE status = 'shipped';

Data Manipulation Language (DML)
--------------------------------
Insert:
INSERT INTO employees (name, department, salary) VALUES ('Alice', 'HR', 50000);

Update:
UPDATE employees SET salary = salary + 5000 WHERE department = 'HR';

Delete:
DELETE FROM employees WHERE id = 3;

Data Definition Language (DDL)
------------------------------

Create Table:
CREATE TABLE employees (
    id INT PRIMARY KEY,
    name VARCHAR(100),
    department VARCHAR(50),
    salary DECIMAL(10, 2)
);

Alter Table:
ALTER TABLE employees ADD email VARCHAR(100);
ALTER TABLE rename employees TO staff;
ALTER TABLE staff RENAME COLUMN name TO full_name;
ALTER TABLE staff DROP COLUMN email;
ALTER TABLE staff ADD CONSTRAINT chk_salary CHECK (salary > 0);
ALTER TABLE staff ADD UNIQUE (full_name);

Drop Table:
DROP TABLE employees;

Joins:
SELECT e.name, d.name
FROM employees e
JOIN departments d ON e.department_id = d.id;

-- LEFT JOIN
SELECT * FROM employees e LEFT JOIN salaries s ON e.id = s.employee_id;


Subqueries:
SELECT name FROM employees WHERE salary > (SELECT AVG(salary) FROM employees);

// Aggregate Functions
SELECT COUNT(*) FROM employees;
SELECT AVG(salary) FROM employees;
SELECT MAX(salary) FROM employees;
SELECT MIN(salary) FROM employees;

// Group By
SELECT department, COUNT(*) FROM employees GROUP BY department;

// Having Clause
SELECT department, AVG(salary) FROM employees GROUP BY department HAVING AVG(salary) > 60000;

// Limit 
SELECT * FROM employees LIMIT 10;

// Order By
SELECT * FROM employees ORDER BY salary DESC; // asc

// Distinct
SELECT DISTINCT department FROM employees;

// Like Operator
SELECT * FROM employees WHERE name LIKE 'A%'; // names starting with 'A'

// In Operator
SELECT * FROM employees WHERE department IN ('HR', 'Finance');

// Between Operator
SELECT * FROM employees WHERE salary BETWEEN 40000 AND 60000;

// Set Operations
-----------------
// Union
SELECT name FROM employees WHERE department = 'HR'

UNION 
SELECT name FROM employees WHERE department = 'Finance';

// Intersect
SELECT name FROM employees WHERE department = 'HR'
INTERSECT
SELECT name FROM employees WHERE salary > 50000;    

// Except
SELECT name FROM employees WHERE department = 'HR'
EXCEPT
SELECT name FROM employees WHERE salary < 50000;

// Transactions
BEGIN TRANSACTION;
UPDATE employees SET salary = salary + 1000 WHERE department = 'Finance';
COMMIT;

ROLLBACK; -- if needed to revert changes

